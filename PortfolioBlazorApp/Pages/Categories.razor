@page "/category"

@inject HttpClient http
@using Portfolio.Shared.ViewModels

<h3>Categories</h3>
<div>
    <h4><a href="./language">Languages</a></h4>
    <ul>
        @foreach (var l in languages)
        {
            <li>
                <a href="./language/@l.Slug"> @l.Name</a>
            </li>
        }
    </ul>
</div>
<div>
    <h4><a href="./platform">Platforms</a></h4>
    <ul>
        @foreach (var p in platforms)
        {
            <li>
                <a href="./platform/@p.Slug"> @p.Name</a>
            </li>
        }
    </ul>
</div>

<div>
    <h4><a href="./technology">Technologies</a></h4>
    <ul>
        @foreach (var t in technologies)
        {
            <li>
                <a href="./technology/@t.Id"> @t.Name</a>
            </li>
        }
    </ul>
</div>



@code {
    private IEnumerable<LanguageViewModel> languages = new List<LanguageViewModel>();
    private IEnumerable<PlatformViewModel> platforms = new List<PlatformViewModel>();
    private IEnumerable<TechnologyViewModel> technologies = new List<TechnologyViewModel>();


    protected override async Task OnInitializedAsync()
    {
        await RefreshCategoriesAsync();
    }

    private async Task RefreshCategoriesAsync()
    {
        languages = await http.GetFromJsonAsync<IEnumerable<LanguageViewModel>>("/api/category/GetLanguages");
        platforms = await http.GetFromJsonAsync<IEnumerable<PlatformViewModel>>("/api/category/GetPlatforms");
        technologies = await http.GetFromJsonAsync<IEnumerable<TechnologyViewModel>>("/api/category/GetTechnologies");
    }




}
